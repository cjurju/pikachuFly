{
    "Outputs": {
        "webServerEIP": {
            "Description": "Elastic IP of the web server EC2",
            "Value": {
                "Fn::GetAtt": [
                    "webServerElasticIP",
                    "AllocationId"
                ]
            }
        }
    },
    "Parameters": {
        "cpSSHKey": {
            "Description": "Name of an existing EC2 SSH KeyPair",
            "Type": "AWS::EC2::KeyPair::KeyName"
        }
    },
    "Resources": {
        "NATGateway": {
            "Properties": {
                "AllocationId": {
                    "Fn::GetAtt": [
                        "NATGatewayElasticIP",
                        "AllocationId"
                    ]
                },
                "SubnetId": {
                    "Ref": "cpPublicSubnet"
                }
            },
            "Type": "AWS::EC2::NatGateway"
        },
        "NATGatewayElasticIP": {
            "Properties": {
                "Domain": "vpc"
            },
            "Type": "AWS::EC2::EIP"
        },
        "cpAttachInternetGateway": {
            "Properties": {
                "InternetGatewayId": {
                    "Ref": "cpInternetGateway"
                },
                "VpcId": {
                    "Ref": "cpVPC"
                }
            },
            "Type": "AWS::EC2::VPCGatewayAttachment"
        },
        "cpBackendSecurityGroup": {
            "Properties": {
                "GroupDescription": "Backend Server Security Group",
                "SecurityGroupIngress": [
                    {
                        "CidrIp": "0.0.0.0/0",
                        "FromPort": "22",
                        "IpProtocol": "tcp",
                        "ToPort": "22"
                    },
                    {
                        "CidrIp": "0.0.0.0/0",
                        "FromPort": "8081",
                        "IpProtocol": "tcp",
                        "ToPort": "8081"
                    }
                ],
                "VpcId": {
                    "Ref": "cpVPC"
                }
            },
            "Type": "AWS::EC2::SecurityGroup"
        },
        "cpInternetGateway": {
            "Properties": {
                "Tags": [
                    {
                        "Key": "Application",
                        "Value": {
                            "Ref": "AWS::StackId"
                        }
                    }
                ]
            },
            "Type": "AWS::EC2::InternetGateway"
        },
        "cpInternetGatewayRoute": {
            "Properties": {
                "DestinationCidrBlock": "0.0.0.0/0",
                "GatewayId": {
                    "Ref": "cpInternetGateway"
                },
                "RouteTableId": {
                    "Ref": "cpPublicRouteTable"
                }
            },
            "Type": "AWS::EC2::Route"
        },
        "cpNATRoute": {
            "Properties": {
                "DestinationCidrBlock": "0.0.0.0/0",
                "NatGatewayId": {
                    "Ref": "NATGateway"
                },
                "RouteTableId": {
                    "Ref": "cpPrivateRouteTable"
                }
            },
            "Type": "AWS::EC2::Route"
        },
        "cpPrivInstance01": {
            "Properties": {
                "ImageId": "ami-024fe7d8b3a587508",
                "InstanceType": "t2.micro",
                "KeyName": {
                    "Ref": "cpSSHKey"
                },
                "NetworkInterfaces": [
                    {
                        "DeleteOnTermination": "true",
                        "DeviceIndex": "0",
                        "GroupSet": [
                            {
                                "Ref": "cpBackendSecurityGroup"
                            }
                        ],
                        "SubnetId": {
                            "Ref": "cpPrivateSubnet"
                        }
                    }
                ],
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "cp_priv_instance_1"
                    }
                ],
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "",
                            [
                                "#!/bin/bash -v\n",
                                "sudo yum install -y https://dl.fedoraproject.org/pub/epel/epel-release-latest-$(rpm -E '%{rhel}').noarch.rpm &>/root/user-data.log\n",
                                "sudo yum install -y python-pip &>>/root/user-data.log\n",
                                "sudo pip install Flask &>>/root/user-data.log\n",
                                "sudo yum install -y git &>>/root/user-data.log\n",
                                "sudo mkdir -p /root/work && cd /root/work/ && git clone -v https://github.com/cjurju/pikachuFly.git . &>>/root/user-data.log\n",
                                "sudo python /root/work/python-troposphere/HelloWorld.py & &>>/root/user-data.log"
                            ]
                        ]
                    }
                }
            },
            "Type": "AWS::EC2::Instance"
        },
        "cpPrivateRouteTable": {
            "Properties": {
                "VpcId": {
                    "Ref": "cpVPC"
                }
            },
            "Type": "AWS::EC2::RouteTable"
        },
        "cpPrivateSubnet": {
            "Properties": {
                "CidrBlock": "10.0.1.0/24",
                "Tags": [
                    {
                        "Key": "Application",
                        "Value": {
                            "Ref": "AWS::StackId"
                        }
                    }
                ],
                "VpcId": {
                    "Ref": "cpVPC"
                }
            },
            "Type": "AWS::EC2::Subnet"
        },
        "cpPrivateSubnetRouteTableAssociation01": {
            "Properties": {
                "RouteTableId": {
                    "Ref": "cpPrivateRouteTable"
                },
                "SubnetId": {
                    "Ref": "cpPrivateSubnet"
                }
            },
            "Type": "AWS::EC2::SubnetRouteTableAssociation"
        },
        "cpPubInstance01": {
            "Properties": {
                "ImageId": "ami-024fe7d8b3a587508",
                "InstanceType": "t2.micro",
                "KeyName": {
                    "Ref": "cpSSHKey"
                },
                "NetworkInterfaces": [
                    {
                        "DeleteOnTermination": "true",
                        "DeviceIndex": "0",
                        "GroupSet": [
                            {
                                "Ref": "cpWebServerSecurityGroup"
                            }
                        ],
                        "SubnetId": {
                            "Ref": "cpPublicSubnet"
                        }
                    }
                ],
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "cp_public_instance_1"
                    }
                ],
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "",
                            [
                                "#!/bin/bash -v\n",
                                "sudo yum install -y https://dl.fedoraproject.org/pub/epel/epel-release-latest-$(rpm -E '%{rhel}').noarch.rpm &>/root/user-data.log\n",
                                "sudo yum install -y nginx &>>/root/user-data.log\n",
                                "sudo systemctl enable nginx &>>/root/user-data.log\n",
                                "sudo sed -i 's/\\ default_server//g' /etc/nginx/nginx.conf &>>/root/user-data.log\n",
                                "sudo yum install -y git &>>/root/user-data.log\n",
                                "sudo mkdir -p /root/work && cd /root/work/ && git clone -v https://github.com/cjurju/pikachuFly.git . &>>/root/user-data.log\n",
                                "sudo cp /root/work/python-troposphere/config/cpNginx.conf /etc/nginx/conf.d/ &>>/root/user-data.log\n",
                                "sudo systemctl start nginx &>>/root/user-data.log"
                            ]
                        ]
                    }
                }
            },
            "Type": "AWS::EC2::Instance"
        },
        "cpPublicRouteTable": {
            "Properties": {
                "VpcId": {
                    "Ref": "cpVPC"
                }
            },
            "Type": "AWS::EC2::RouteTable"
        },
        "cpPublicSubnet": {
            "Properties": {
                "CidrBlock": "10.0.0.0/24",
                "MapPublicIpOnLaunch": "true",
                "Tags": [
                    {
                        "Key": "Application",
                        "Value": {
                            "Ref": "AWS::StackId"
                        }
                    }
                ],
                "VpcId": {
                    "Ref": "cpVPC"
                }
            },
            "Type": "AWS::EC2::Subnet"
        },
        "cpPublicSubnetRouteTableAssociation01": {
            "Properties": {
                "RouteTableId": {
                    "Ref": "cpPublicRouteTable"
                },
                "SubnetId": {
                    "Ref": "cpPublicSubnet"
                }
            },
            "Type": "AWS::EC2::SubnetRouteTableAssociation"
        },
        "cpVPC": {
            "Properties": {
                "CidrBlock": "10.0.0.0/16",
                "EnableDnsHostnames": "true",
                "EnableDnsSupport": "true",
                "Tags": [
                    {
                        "Key": "Application",
                        "Value": {
                            "Ref": "AWS::StackId"
                        }
                    }
                ]
            },
            "Type": "AWS::EC2::VPC"
        },
        "cpWebServerSecurityGroup": {
            "Properties": {
                "GroupDescription": "Web Server Security Group",
                "SecurityGroupIngress": [
                    {
                        "CidrIp": "0.0.0.0/0",
                        "FromPort": "22",
                        "IpProtocol": "tcp",
                        "ToPort": "22"
                    },
                    {
                        "CidrIp": "0.0.0.0/0",
                        "FromPort": "80",
                        "IpProtocol": "tcp",
                        "ToPort": "80"
                    }
                ],
                "VpcId": {
                    "Ref": "cpVPC"
                }
            },
            "Type": "AWS::EC2::SecurityGroup"
        },
        "webServerEIPAssociation": {
            "Properties": {
                "AllocationId": {
                    "Fn::GetAtt": [
                        "webServerElasticIP",
                        "AllocationId"
                    ]
                },
                "InstanceId": {
                    "Ref": "cpPubInstance01"
                }
            },
            "Type": "AWS::EC2::EIPAssociation"
        },
        "webServerElasticIP": {
            "Properties": {
                "Domain": "vpc"
            },
            "Type": "AWS::EC2::EIP"
        }
    }
}